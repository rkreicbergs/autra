// This is a generated file

#include "Game/Levels/RhythmLevel.h"
#include "Game/Game.h"

namespace AutraLib
{
    static const int ExamIds[] = {14, 34, 59, 74, 99, 119};

    void RhythmLevel::LoadData()
    {
        std::vector<Level*>* allLevels = new std::vector<Level*>();
        allLevels->reserve(60);

        /* 1 */ allLevels->push_back(new RhythmLevel(true, 10, 0, 0, 5, 3000, 240, 0, 0, 0, 0, 0, 84, 10, 1, 40, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 2 */ allLevels->push_back(new RhythmLevel(false, 11, 0, 0, 5, 2500, 252, 0, 0, 0, 0, 0, 85, 11, 1, 40, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 3 */ allLevels->push_back(new RhythmLevel(false, 11, 0, 0, 5, 2000, 264, 0, 0, 0, 0, 0, 86, 12, 1, 40, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 4 */ allLevels->push_back(new RhythmLevel(false, 12, 0, 0, 6, 1500, 276, 0, 0, 0, 0, 0, 87, 13, 1, 40, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 5 */ allLevels->push_back(new RhythmLevel(false, 12, 0, 0, 6, 1000, 288, 0, 0, 0, 0, 0, 88, 14, 1, 40, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 6 */ allLevels->push_back(new RhythmLevel(false, 11, 0, 0, 6, 3000, 300, 0, 0, 0, 0, 0, 89, 10, 1, 40, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 7 */ allLevels->push_back(new RhythmLevel(false, 12, 0, 0, 6, 2500, 312, 0, 0, 0, 0, 0, 90, 11, 1, 40, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 8 */ allLevels->push_back(new RhythmLevel(false, 12, 0, 0, 6, 2000, 324, 0, 0, 0, 0, 0, 91, 12, 1, 40, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 9 */ allLevels->push_back(new RhythmLevel(false, 13, 0, 0, 7, 1500, 336, 0, 0, 0, 0, 0, 92, 13, 1, 40, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 10 */ allLevels->push_back(new RhythmLevel(true, 13, 0, 0, 7, 1000, 348, 0, 0, 0, 0, 0, 93, 14, 1, 40, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 11 */ allLevels->push_back(new RhythmLevel(false, 0, 13, 0, 6, 3000, 300, 1, 6, 6, 150, 200, 104, 20, 2, 45, {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 12 */ allLevels->push_back(new RhythmLevel(false, 0, 13, 0, 6, 2500, 312, 2, 6, 6, 150, 200, 105, 21, 2, 45, {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 13 */ allLevels->push_back(new RhythmLevel(false, 0, 14, 0, 6, 2000, 324, 3, 6, 6, 100, 200, 106, 22, 2, 45, {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 14 */ allLevels->push_back(new RhythmLevel(false, 0, 14, 0, 7, 1500, 336, 4, 6, 6, 100, 200, 107, 23, 2, 45, {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 15 */ allLevels->push_back(new RhythmLevel(false, 0, 15, 0, 7, 1000, 348, 5, 6, 6, 100, 200, 108, 24, 2, 45, {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}));
        /* 16 */ allLevels->push_back(new RhythmLevel(false, 0, 14, 0, 7, 3000, 360, 6, 6, 6, 260, 360, 109, 20, 2, 45, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}));
        /* 17 */ allLevels->push_back(new RhythmLevel(false, 0, 14, 0, 7, 2500, 372, 6, 6, 6, 260, 360, 110, 21, 2, 45, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}));
        /* 18 */ allLevels->push_back(new RhythmLevel(false, 0, 14, 0, 8, 2000, 384, 6, 6, 6, 260, 360, 111, 22, 2, 45, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}));
        /* 19 */ allLevels->push_back(new RhythmLevel(false, 0, 15, 0, 8, 1500, 396, 6, 6, 6, 260, 360, 112, 23, 2, 45, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}));
        /* 20 */ allLevels->push_back(new RhythmLevel(true, 0, 15, 0, 8, 1000, 408, 6, 6, 6, 260, 360, 113, 24, 2, 50, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0}));
        /* 21 */ allLevels->push_back(new RhythmLevel(true, 0, 0, 15, 7, 3000, 360, 2, 6, 9, 200, 360, 124, 25, 2, 50, {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 22 */ allLevels->push_back(new RhythmLevel(false, 0, 0, 16, 7, 2500, 372, 2, 6, 9, 200, 360, 125, 26, 2, 50, {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 23 */ allLevels->push_back(new RhythmLevel(false, 0, 0, 16, 8, 2000, 384, 3, 6, 9, 200, 360, 126, 27, 2, 50, {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 24 */ allLevels->push_back(new RhythmLevel(false, 0, 0, 17, 8, 1500, 396, 3, 6, 9, 200, 360, 127, 28, 2, 50, {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 25 */ allLevels->push_back(new RhythmLevel(false, 0, 0, 17, 8, 1000, 408, 4, 6, 9, 200, 360, 128, 29, 2, 50, {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0}));
        /* 26 */ allLevels->push_back(new RhythmLevel(false, 0, 0, 16, 8, 3000, 420, 4, 6, 9, 200, 360, 129, 30, 2, 50, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0}));
        /* 27 */ allLevels->push_back(new RhythmLevel(false, 0, 0, 16, 9, 2500, 432, 5, 6, 9, 200, 360, 130, 31, 2, 50, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0}));
        /* 28 */ allLevels->push_back(new RhythmLevel(false, 0, 0, 17, 9, 2000, 444, 5, 6, 9, 200, 360, 131, 32, 2, 50, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0}));
        /* 29 */ allLevels->push_back(new RhythmLevel(false, 0, 0, 17, 9, 1500, 456, 6, 6, 9, 200, 360, 132, 33, 2, 50, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0}));
        /* 30 */ allLevels->push_back(new RhythmLevel(true, 0, 0, 18, 9, 1000, 468, 6, 6, 9, 200, 360, 133, 34, 2, 50, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0}));
        /* 31 */ allLevels->push_back(new RhythmLevel(false, 7, 7, 0, 8, 3000, 420, 2, 6, 12, 100, 400, 144, 30, 2, 60, {0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0}));
        /* 32 */ allLevels->push_back(new RhythmLevel(false, 7, 7, 0, 9, 2500, 432, 2, 6, 12, 100, 400, 145, 30, 2, 60, {0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0}));
        /* 33 */ allLevels->push_back(new RhythmLevel(false, 7, 7, 0, 9, 2000, 444, 3, 6, 12, 100, 400, 146, 30, 2, 60, {0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0}));
        /* 34 */ allLevels->push_back(new RhythmLevel(false, 8, 8, 0, 9, 1500, 456, 3, 6, 12, 100, 400, 147, 30, 2, 60, {0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0}));
        /* 35 */ allLevels->push_back(new RhythmLevel(false, 8, 8, 0, 9, 1000, 468, 4, 6, 12, 100, 400, 148, 30, 2, 60, {0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0}));
        /* 36 */ allLevels->push_back(new RhythmLevel(false, 8, 8, 0, 10, 3000, 480, 4, 6, 12, 100, 400, 149, 30, 2, 60, {0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0}));
        /* 37 */ allLevels->push_back(new RhythmLevel(false, 8, 8, 0, 10, 2500, 492, 5, 6, 12, 100, 400, 150, 30, 2, 60, {0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0}));
        /* 38 */ allLevels->push_back(new RhythmLevel(false, 8, 8, 0, 10, 2000, 504, 5, 6, 12, 100, 400, 151, 30, 2, 60, {0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0}));
        /* 39 */ allLevels->push_back(new RhythmLevel(false, 9, 9, 0, 10, 1500, 516, 6, 6, 12, 100, 400, 152, 30, 2, 60, {0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0}));
        /* 40 */ allLevels->push_back(new RhythmLevel(true, 9, 9, 0, 11, 1000, 528, 6, 6, 12, 100, 400, 153, 30, 2, 60, {0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0}));
        /* 41 */ allLevels->push_back(new RhythmLevel(true, 9, 0, 9, 11, 3000, 540, 2, 6, 15, 200, 500, 164, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0}));
        /* 42 */ allLevels->push_back(new RhythmLevel(false, 9, 0, 9, 11, 2500, 552, 2, 6, 15, 200, 500, 165, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0}));
        /* 43 */ allLevels->push_back(new RhythmLevel(false, 9, 0, 9, 11, 2000, 564, 3, 6, 15, 200, 500, 166, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0}));
        /* 44 */ allLevels->push_back(new RhythmLevel(false, 10, 0, 10, 12, 1500, 576, 3, 6, 15, 200, 500, 167, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0}));
        /* 45 */ allLevels->push_back(new RhythmLevel(false, 10, 0, 10, 12, 1000, 588, 4, 6, 15, 200, 500, 168, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0}));
        /* 46 */ allLevels->push_back(new RhythmLevel(false, 10, 0, 10, 12, 3000, 600, 4, 6, 15, 200, 500, 169, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0}));
        /* 47 */ allLevels->push_back(new RhythmLevel(false, 10, 0, 10, 12, 2500, 612, 4, 6, 15, 200, 500, 170, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0}));
        /* 48 */ allLevels->push_back(new RhythmLevel(false, 10, 0, 10, 12, 2000, 624, 5, 6, 15, 200, 500, 171, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0}));
        /* 49 */ allLevels->push_back(new RhythmLevel(false, 11, 0, 11, 13, 1500, 636, 5, 6, 15, 200, 500, 172, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0}));
        /* 50 */ allLevels->push_back(new RhythmLevel(true, 11, 0, 11, 13, 1000, 648, 5, 6, 15, 200, 500, 173, 50, 2, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0}));
        /* 51 */ allLevels->push_back(new RhythmLevel(false, 3, 9, 9, 14, 3000, 684, 2, 12, 18, 200, 500, 184, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1}));
        /* 52 */ allLevels->push_back(new RhythmLevel(false, 3, 9, 9, 14, 2500, 720, 3, 12, 18, 200, 500, 185, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1}));
        /* 53 */ allLevels->push_back(new RhythmLevel(false, 3, 9, 9, 15, 2000, 756, 3, 12, 18, 200, 500, 186, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1}));
        /* 54 */ allLevels->push_back(new RhythmLevel(false, 3, 10, 10, 16, 1500, 792, 4, 12, 18, 300, 700, 187, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1}));
        /* 55 */ allLevels->push_back(new RhythmLevel(false, 3, 10, 10, 17, 1000, 828, 4, 12, 18, 300, 800, 188, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1}));
        /* 56 */ allLevels->push_back(new RhythmLevel(false, 7, 11, 11, 9, 3000, 864, 4, 12, 18, 300, 800, 184, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1}));
        /* 57 */ allLevels->push_back(new RhythmLevel(false, 8, 11, 11, 9, 2500, 900, 4, 12, 18, 400, 850, 185, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1}));
        /* 58 */ allLevels->push_back(new RhythmLevel(false, 8, 12, 12, 9, 2000, 936, 5, 12, 18, 400, 850, 186, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1}));
        /* 59 */ allLevels->push_back(new RhythmLevel(false, 8, 12, 12, 10, 1500, 972, 5, 12, 18, 500, 900, 187, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1}));
        /* 60 */ allLevels->push_back(new RhythmLevel(true, 10, 15, 15, 12, 1000, 1188, 5, 12, 18, 500, 900, 188, 100, 3, 60, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1}));

        Game::Register(GameType::Rhythm, allLevels);
    }
}
